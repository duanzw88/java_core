1.类的设计技巧:
	1. 一定要保证数据私有，不要破坏封装性
	2. 一定要对数据初始化
		Java不对局部变量初始化，但是会对对象的实例域进行初始化，最好不依赖于系统的默认值，而是应该显示地初始化所有的数据。具体的初始化方式可以是提供默认值，也可以是在所有构造器中设置默认值。
	3. 不要再类中使用过多的基本类型
		用其他的类代替多个相关的基本类型的使用，会使类更加易于理解且易于修改
	4. 不是所有的域都需要独立的域访问器和域更改器
	5. 将职责过多的类进行分解
	6. 类名和方法名能够体现他们的职责

2. 继承，利用继承，可以基于已经存在的类构造一个新类。继承已经存在的类就可以复用这些类的方法和域，在此基础上还可以添加一些新的方法和域，以满足新的需求。
3. Java不支持多继承
4. 方法名字和参数列表成为方法的签名
	如果在子类中定义了一个与超类签名相同的方法，那么子类中的这个方法就覆盖了超类中的合格相同签名的方法
	ps：返回类型不是签名的一部分
5. 不允许扩展的类被称为final类
6. 类中的方法也可以被生命为final，这样子类就不能覆盖这个方法了。
	域(变量)也可以被声明为final，这样构造对象之后就不允许改变他们的值了
7. final类中所有的方法自动的成为final方法，但是只包括方法不包括域
8. 编写一个完美的equals方法的建议:
	1. 显示
	2.3.4.5.6.7.8
